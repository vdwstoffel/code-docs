"use strict";(self.webpackChunkcode_docs=self.webpackChunkcode_docs||[]).push([[1661],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),i=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=i(e.components);return a.createElement(c.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=i(t),m=r,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||s;return t?a.createElement(f,o(o({ref:n},u),{},{components:t})):a.createElement(f,o({ref:n},u))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,o=new Array(s);o[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var i=2;i<s;i++)o[i]=t[i];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>o});var a=t(7294),r=t(6010);const s={tabItem:"tabItem_Ymn6"};function o(e){let{children:n,hidden:t,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(s.tabItem,o),hidden:t},n)}},4866:(e,n,t)=>{t.d(n,{Z:()=>x});var a=t(7462),r=t(7294),s=t(6010),o=t(2466),l=t(6550),c=t(1980),i=t(7392),u=t(12);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}function d(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??p(t);return function(e){const n=(0,i.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const a=(0,l.k6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c._X)(s),(0,r.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})}),[s,a])]}function b(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,s=d(e),[o,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:s}))),[c,i]=f({queryString:t,groupId:a}),[p,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,s]=(0,u.Nk)(t);return[a,(0,r.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:a}),k=(()=>{const e=c??p;return m({value:e,tabValues:s})?e:null})();(0,r.useLayoutEffect)((()=>{k&&l(k)}),[k]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),i(e),b(e)}),[i,b,s]),tabValues:s}}var k=t(2389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){let{className:n,block:t,selectedValue:l,selectValue:c,tabValues:i}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.o5)(),d=e=>{const n=e.currentTarget,t=u.indexOf(n),a=i[t].value;a!==l&&(p(n),c(a))},m=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=u.indexOf(e.currentTarget)+1;n=u[t]??u[0];break}case"ArrowLeft":{const t=u.indexOf(e.currentTarget)-1;n=u[t]??u[u.length-1];break}}n?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":t},n)},i.map((e=>{let{value:n,label:t,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,key:n,ref:e=>u.push(e),onKeyDown:m,onClick:d},o,{className:(0,s.Z)("tabs__item",v.tabItem,o?.className,{"tabs__item--active":l===n})}),t??n)})))}function h(e){let{lazy:n,children:t,selectedValue:a}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},s.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function y(e){const n=b(e);return r.createElement("div",{className:(0,s.Z)("tabs-container",v.tabList)},r.createElement(g,(0,a.Z)({},e,n)),r.createElement(h,(0,a.Z)({},e,n)))}function x(e){const n=(0,k.Z)();return r.createElement(y,(0,a.Z)({key:String(n)},e))}},5429:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>f,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=t(7462),r=(t(7294),t(3905)),s=t(4866),o=t(5162);const l={sidebar_label:"Examples"},c="Examples",i={unversionedId:"docker/docker-examples",id:"docker/docker-examples",title:"Examples",description:"Node Example (with nodemon)",source:"@site/docs/docker/docker-examples.md",sourceDirName:"docker",slug:"/docker/docker-examples",permalink:"/docker/docker-examples",draft:!1,editUrl:"https://github.com/vdwstoffel/code_docs/blob/main/docs/docker/docker-examples.md",tags:[],version:"current",frontMatter:{sidebar_label:"Examples"},sidebar:"tutorialSidebar",previous:{title:"Docker",permalink:"/docker/"},next:{title:"Bash",permalink:"/bash/"}},u={},p=[{value:"Node Example (with nodemon)",id:"node-example-with-nodemon",level:2},{value:"Express Backend + PostgreSQL",id:"express-backend--postgresql",level:2},{value:"React (Vite) + Express",id:"react-vite--express",level:2},{value:"Backend",id:"backend",level:3},{value:"Frontend",id:"frontend",level:3}],d={toc:p},m="wrapper";function f(e){let{components:n,...t}=e;return(0,r.kt)(m,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"examples"},"Examples"),(0,r.kt)("h2",{id:"node-example-with-nodemon"},"Node Example (with nodemon)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-docker",metastring:'title="Dockerfile"',title:'"Dockerfile"'},'FROM node\n\nWORKDIR /app\n\nCOPY package.json .\n\nRUN npm install\n\nCOPY . .\n\nEXPOSE 3000\n\nCMD ["npm", "start"]\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'"scripts": {\n    "start": "nodemon app.js"\n  },\n"devDependencies": {\n    "nodemon": "^2.0.4"\n  }\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="docker-compose.yaml"',title:'"docker-compose.yaml"'},'version: "3.8"\nservices:\n  server:\n    container_name: server\n    build:\n    context: ./server\n    dockerfile: ./docker/Dockerfile\n    ports:\n      - "3001:3001"\n    volumes:\n      - ./server:/app\n      - /app/node_modules/\n    env_file:\n      - .env\n    depends_on:\n      - database\n')),(0,r.kt)("h2",{id:"express-backend--postgresql"},"Express Backend + PostgreSQL"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose up -d --build server\n")),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"Database.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'"use strict";\n\nconst { Client } = require("pg");\nrequire("dotenv").config({ path: "./.env" });\n\nclass Connector {\n  constructor() {\n    (this.database = process.env.POSTGRES_DB),\n      (this.host = process.env.POSTGRES_HOST),\n      (this.user = process.env.POSTGRES_USER),\n      (this.password = process.env.POSTGRES_PASSWORD);\n  }\n\n  connectToDatabase = () => {\n    const client = new Client({\n      host: this.host,\n      port: 5432,\n      database: this.database,\n      user: this.user,\n      password: this.password,\n      idle_in_transaction_session_timeout: 3,\n    });\n    return client;\n  };\n}\n\nclass User extends Connector {\n  createTable = async () => {\n    const client = this.connectToDatabase();\n    await client.connect();\n    await client.query(`CREATE TABLE IF NOT EXISTS users_table (\n            user_id SERIAL PRIMARY KEY,\n            username VARCHAR(250)\n        );`);\n    await client.end();\n  };\n\n  getUsers = async () => {\n    const client = this.connectToDatabase();\n    await client.connect();\n    const query = await client.query(`SELECT * FROM users_table;`);\n    await client.end();\n    return query.rows;\n  };\n\n  insertUser = async (username) => {\n    const client = this.connectToDatabase();\n    await client.connect();\n    await client.query(`INSERT INTO users_table (username)\n                          VALUES (\'${username}\');`);\n    await client.end();\n  };\n}\n\nmodule.exports = User;\n'))),(0,r.kt)(o.Z,{value:"App.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const express = require("express");\nconst app = express();\n\nconst Database = require("./db");\nconst db = new Database();\ndb.createTable();\n\napp.get("/", async (req, res) => {\n  const users = await db.getUsers();\n  res.send(users);\n});\n\napp.post("/add", async (req, res) => {\n  await db.insertUser("stoffel");\n  const users = await db.getUsers();\n  res.send(users);\n});\n\napp.listen(3000);\n'))),(0,r.kt)(o.Z,{value:".env",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-env"},'POSTGRES_DB="snippets"\nPOSTGRES_USER="stoffel"\nPOSTGRES_PASSWORD="StoffelJossie"\nPOSTGRES_HOST="database"    # should match the service in docker-compose\n'))),(0,r.kt)(o.Z,{value:"Dockerfile",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Dockerfile"},'FROM node:latest\n\nWORKDIR /app\n\nCOPY package*.json ./\n\nRUN npm install\n\nCOPY . .\n\nEXPOSE 3000\n\nCMD [ "node", "app.js" ]\n'))),(0,r.kt)(o.Z,{value:"docker-compose.yaml",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'version: "3.18"\nservices:\n  database:\n    image: postgres\n    restart: always\n    container_name: database\n    env_file:\n      - ./.env\n    ports:\n      - "5432:5432"\n    volumes:\n      - snippets:/var/lib/postgresql/data\n\n  server:\n    container_name: server\n    build:\n      context: ./\n      dockerfile: ./Dockerfile\n    ports:\n      - "3000:3000"\n    volumes:\n      - ./:/app\n      - /app/node_modules/\n    env_file:\n      - .env\n    depends_on:\n      - database\n\nvolumes:\n  snippets:\n')))),(0,r.kt)("h2",{id:"react-vite--express"},"React (Vite) + Express"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\u251c\u2500\u2500 client\n\u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u251c\u2500\u2500 index.html\n\u2502   \u251c\u2500\u2500 package.json\n\u2502   \u251c\u2500\u2500 package-lock.json\n\u2502   \u251c\u2500\u2500 src\n\u2502   \u2502   \u251c\u2500\u2500 App.jsx\n\u2502   \u2502   \u2514\u2500\u2500 main.jsx\n\u2502   \u2514\u2500\u2500 vite.config.js\n\u251c\u2500\u2500 docker-compose.yaml\n\u2514\u2500\u2500 server\n    \u251c\u2500\u2500 Dockerfile\n    \u251c\u2500\u2500 package.json\n    \u251c\u2500\u2500 package-lock.json\n    \u2514\u2500\u2500 server.js\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="docker-compose.yaml"',title:'"docker-compose.yaml"'},'version: "3.18"\nservices:\n  server:\n    image: server:exammple\n    container_name: server\n    build:\n      context: ./server\n      dockerfile: ./Dockerfile\n    ports:\n      - "3001:3001"\n    volumes:\n      - ./server:/app\n      - /app/node_modules/\n\n  client:\n    image: client:example\n    container_name: client\n    build:\n      context: ./client\n      dockerfile: ./Dockerfile\n    ports:\n      - "3000:3000"\n    volumes:\n      - ./client/src:/app/src\n      - /app/node_modules/\n    depends_on:\n      - server\n')),(0,r.kt)("h3",{id:"backend"},"Backend"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"server.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'"use strict";\n\nconst express = require("express");\nconst app = express();\n\napp.get("/api", (req, res) => {\n  res.send("hello world");\n});\n\napp.listen(3001);\n'))),(0,r.kt)(o.Z,{value:"Dockerfile",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dockerfile"},'FROM node:latest\n\nWORKDIR /app\n\nCOPY package*.json ./\n\nRUN npm install\n\nCOPY ./ ./\n\nEXPOSE 3001\n\nCMD [ "node", "server.js" ]\n')))),(0,r.kt)("h3",{id:"frontend"},"Frontend"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"vite.config.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},' server: {\n    port: 3000, // set custom port:\n    host: true, // needed for docker\n    proxy: {\n      "/api": {\n        target: "http://server:3001", // docker-compose service name: express port\n        changeOrigin: true,\n      },\n    },\n  },\n'))),(0,r.kt)(o.Z,{value:"App.jsx",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import { useEffect, useState } from "react";\nimport axios from "axios";\n\nexport default function App() {\n  const [img, setImg] = useState("");\n\n  useEffect(() => {\n    const getData = async () => {\n      const res = await axios.get("/api"); // path from server\n      setImg(res.data);\n    };\n    getData();\n  }, []);\n\n  return (\n    <div>\n      <h1>Response: {img}</h1>\n    </div>\n  );\n}\n'))),(0,r.kt)(o.Z,{value:"Dockerfile",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dockerfile"},'FROM node:latest\n\nWORKDIR /app\n\nCOPY package*.json ./\n\nRUN npm install\n\nCOPY . .\n\nEXPOSE 3000\n\nCMD [ "npm", "run", "dev" ]\n')))))}f.isMDXComponent=!0}}]);