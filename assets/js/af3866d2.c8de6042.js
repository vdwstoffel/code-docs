"use strict";(self.webpackChunkcode_docs=self.webpackChunkcode_docs||[]).push([[2005],{3905:(e,n,t)=>{t.d(n,{Zo:()=>f,kt:()=>h});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var a=r.createContext({}),c=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},f=function(e){var n=c(e.components);return r.createElement(a.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,s=e.originalType,a=e.parentName,f=l(e,["components","mdxType","originalType","parentName"]),d=c(t),u=i,h=d["".concat(a,".").concat(u)]||d[u]||p[u]||s;return t?r.createElement(h,o(o({ref:n},f),{},{components:t})):r.createElement(h,o({ref:n},f))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var s=t.length,o=new Array(s);o[0]=u;var l={};for(var a in n)hasOwnProperty.call(n,a)&&(l[a]=n[a]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<s;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6189:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var r=t(7462),i=(t(7294),t(3905));const s={sidebar_label:"Scripting"},o="Bash",l={unversionedId:"bash/scripting",id:"bash/scripting",title:"Bash",description:"If/Else",source:"@site/docs/bash/scripting.md",sourceDirName:"bash",slug:"/bash/scripting",permalink:"/bash/scripting",draft:!1,editUrl:"https://github.com/vdwstoffel/code_docs/blob/main/docs/bash/scripting.md",tags:[],version:"current",frontMatter:{sidebar_label:"Scripting"},sidebar:"tutorialSidebar",previous:{title:"Bash",permalink:"/bash/"},next:{title:"Linux",permalink:"/linux"}},a={},c=[{value:"If/Else",id:"ifelse",level:2},{value:"Passing Arguments",id:"passing-arguments",level:2},{value:"Check if bin is installed",id:"check-if-bin-is-installed",level:2}],f={toc:c},d="wrapper";function p(e){let{components:n,...t}=e;return(0,i.kt)(d,(0,r.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"bash"},"Bash"),(0,i.kt)("h2",{id:"ifelse"},"If/Else"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"#! /usr/bin/bash\n\nfolder='test_folder'\nfile='test_file'\n\nif [ -d $folder ] \nthen\n  echo 'folder logs exists'\n  rm -r $folder\nelse\n  echo 'Folder logs does not exists'\n  mkdir $folder\nfi\n\nif [ ! -f $file ]\nthen\n  echo 'file does not exists'\n  touch $file\nelse \n  echo 'file exists'\n  rm $file\nfi\n")),(0,i.kt)("h2",{id:"passing-arguments"},"Passing Arguments"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"#! /usr/bin/bash\n\nfolder='test_folder'\nfile='test_file'\n\nif [ -d $folder ] \nthen\n  echo 'folder logs exists'\n  rm -r $folder\nelse\n  echo 'Folder logs does not exists'\n  mkdir $folder\nfi\n\nif [ ! -f $file ]\nthen\n  echo 'file does not exists'\n  touch $file\nelse \n  echo 'file exists'\n  rm $file\nfi\n")),(0,i.kt)("h2",{id:"check-if-bin-is-installed"},"Check if bin is installed"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'#! /usr/bin/bash\n\n# The command -v git command checks if the git command is available in the system\'s PATH. \n# The output is redirected to /dev/null to discard it.\nif command -v git &>/dev/null; \nthen\n    echo "Git is installed."\n    # Print the Git version\n    echo "$(git --version)"\nelse\n    echo "Git is not installed."\nfi\n')))}p.isMDXComponent=!0}}]);