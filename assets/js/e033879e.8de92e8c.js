"use strict";(self.webpackChunkcode_docs=self.webpackChunkcode_docs||[]).push([[7042],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,d=p["".concat(l,".").concat(m)]||p[m]||g[m]||i;return n?r.createElement(d,o(o({ref:t},c),{},{components:n})):r.createElement(d,o({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2278:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_label:"Git",sidebar_position:1,slug:"/"},o="Git",s={unversionedId:"git",id:"git",title:"Git",description:"Start new repo",source:"@site/docs/git.md",sourceDirName:".",slug:"/",permalink:"/",draft:!1,editUrl:"https://github.com/vdwstoffel/code_docs/blob/main/docs/git.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Git",sidebar_position:1,slug:"/"},sidebar:"tutorialSidebar",next:{title:"JavaScript",permalink:"/javascript/"}},l={},u=[{value:"Start new repo",id:"start-new-repo",level:2},{value:"Making Changes",id:"making-changes",level:2},{value:"Merging",id:"merging",level:2},{value:"Go to previous commit",id:"go-to-previous-commit",level:2},{value:"Stashing",id:"stashing",level:2},{value:"Submodules",id:"submodules",level:2}],c={toc:u},p="wrapper";function g(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"git"},"Git"),(0,a.kt)("h2",{id:"start-new-repo"},"Start new repo"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'git init\ngit remote add origin git@github.com:<username>/<repo_name>.git\ngit add <file>\ngit commit -m "initial commit"\ngit push\n')),(0,a.kt)("h2",{id:"making-changes"},"Making Changes"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'git status                  # See changes\ngit add file.py             # Add files/folder to staging\ngit commit -m "my message"  # commit changes\ngit push                    # push to remote repo\n\ngit restore file.js         # discard any changes made\n')),(0,a.kt)("h2",{id:"merging"},"Merging"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git fetch\ngit merge origin/<branch_name>\ngit commit                  # if any conflict resole else just push\ngit push\n")),(0,a.kt)("h2",{id:"go-to-previous-commit"},"Go to previous commit"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git log --oneline\ngit reset sha_hash\n")),(0,a.kt)("h2",{id:"stashing"},"Stashing"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git stash\ngit stash pop\n")),(0,a.kt)("h2",{id:"submodules"},"Submodules"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# updating submodules on a clone\ngit submodule init\n\n# adding a submodule\ngit submodule add <remote_url>\n\n# updating a submodule\ngit submodule update --remote --merge\n\n# remove submodule\ngit rm <path-to-submodule>\n")))}g.isMDXComponent=!0}}]);