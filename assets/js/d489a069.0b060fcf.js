"use strict";(self.webpackChunkcode_docs=self.webpackChunkcode_docs||[]).push([[8168],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>f});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(t),m=r,f=c["".concat(s,".").concat(m)]||c[m]||u[m]||i;return t?a.createElement(f,l(l({ref:n},d),{},{components:t})):a.createElement(f,l({ref:n},d))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[c]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9195:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const i={sidebar_label:"Bash",sidebar_position:6},l="CLI",o={unversionedId:"bash/bash",id:"bash/bash",title:"CLI",description:"Navigation",source:"@site/docs/bash/bash.md",sourceDirName:"bash",slug:"/bash/",permalink:"/bash/",draft:!1,editUrl:"https://github.com/vdwstoffel/code_docs/blob/main/docs/bash/bash.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_label:"Bash",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Examples",permalink:"/docker/docker-examples"},next:{title:"Scripting",permalink:"/bash/scripting"}},s={},p=[{value:"Navigation",id:"navigation",level:2},{value:"Files and Folders",id:"files-and-folders",level:2},{value:"Redirection",id:"redirection",level:2},{value:"Piping",id:"piping",level:2},{value:"Find executable",id:"find-executable",level:2},{value:"Expansion &amp; Substitution",id:"expansion--substitution",level:2},{value:"Brace Expansion",id:"brace-expansion",level:3},{value:"Find",id:"find",level:2},{value:"Grep",id:"grep",level:2},{value:"Permissions",id:"permissions",level:2},{value:"Zip",id:"zip",level:2},{value:"Packages",id:"packages",level:2},{value:".deb",id:"deb",level:3},{value:"Creating A Symlink",id:"creating-a-symlink",level:2}],d={toc:p},c="wrapper";function u(e){let{components:n,...t}=e;return(0,r.kt)(c,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cli"},"CLI"),(0,r.kt)("h2",{id:"navigation"},"Navigation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pwd                 ## Check entire working path\n\nls                  ## List items in directory\n    -l              ## show info\n    -a              ## show hidden folder\n\ncd path/to/foldfer  ## change directory\ncd ..               ## go back one\ncd ~                ## go to root\n")),(0,r.kt)("h2",{id:"files-and-folders"},"Files and Folders"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"touch filename              ## create file\nrm filename                 ## remove file\n\nmkdir foldername            ## create folder\nrm -r foldername            ## remove folder\n\nmv <source> <destination>   ## move file/folder\nmv currentname newname      ## rename file/folder\n\ncp <source> <destination>   ## copy file/folder\n")),(0,r.kt)("h2",{id:"redirection"},"Redirection"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pwd > file.txt              ## direct output to file\npwd >> file.txt             ## append output to file\n\nsort < file.txt             ## standard input\n\ncat nofile 2> error.txt     ## direct errors to file\ncat nofile 2>> error.txt    ## append errors to file\n")),(0,r.kt)("h2",{id:"piping"},"Piping"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ls | sort -r \n")),(0,r.kt)("h2",{id:"find-executable"},"Find executable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"which python\n")),(0,r.kt)("h2",{id:"expansion--substitution"},"Expansion & Substitution"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"*"),": one or char"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"?"),": one char ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'ls *.html       ## all that ends in .html\nls pic?.png     ## find anything that is picX.png\nls pic[123].png ## find anything in range. pic1.png pic2.png pic3.png\nls [^a]*        ## will match any files that do NOT start with "a"\n')),(0,r.kt)("h3",{id:"brace-expansion"},"Brace Expansion"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"touch page{1,2,3}.txt\n")),(0,r.kt)("p",null,"will generate three new files: page1.txt, page2.txt, and page3.txt"),(0,r.kt)("h2",{id:"find"},"Find"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},'find <dir> -iname "<file>"')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'find ./ -name "*.md"\n\n## finding by type\nfind -type d\nfind -type f\n\n## find by name\nfind -name hello    ## case sensitive\nfind -iname hello   ## case insensitive\n')),(0,r.kt)("h2",{id:"grep"},"Grep"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"grep PATTERN FILE")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'grep Flask README.md\ngrep -i Flask README.md     ## add -i to make case insensitive\ngrep -w git README.md       ## add -w to match wholewords\ngrep -r "chicken"           ## recursive search which will include all files under a directory\ngrep -c git README.md       ## print number of matches\n\n## Usefull argumets\n-w ## word\n-i ## ignore case\n-r ## recursive\n-c ## match count\n-n ## Line Number\n-E ## Extended Regex\n')),(0,r.kt)("h2",{id:"permissions"},"Permissions"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'### Who\n## u - user (the owner of the file)\n## g - group (members of the group the file belongs to\n## o - others (the "world")\n## a - all of the above\n\n### What\n## - (minus sign) removes the permission\n## + (plus sign) grants the permission\n## = (equals sign) set a permission and removes others\n\n### Which\n## r - the read permission\n## w - the write permission\n## x - the execute permission\n\nchmod <who><what><which>\nchown <user> <file>\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chmod +x file.py\n")),(0,r.kt)("h2",{id:"zip"},"Zip"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tar -xvzf /path/to/yourfile.tgz\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"unzip file.zip -d destination_folder\n")),(0,r.kt)("h2",{id:"packages"},"Packages"),(0,r.kt)("h3",{id:"deb"},".deb"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo dpkg -i package-name-here.deb\n")),(0,r.kt)("h2",{id:"creating-a-symlink"},"Creating A Symlink"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"}," Note ")," Full file paths used"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ln -sf full/file/path/file.txt full/file/path/file.txt\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"f"),": overwrite file if it exists"))}u.isMDXComponent=!0}}]);