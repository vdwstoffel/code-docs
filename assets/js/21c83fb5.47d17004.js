"use strict";(self.webpackChunkcode_docs=self.webpackChunkcode_docs||[]).push([[2017],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=n.createContext({}),i=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},p=function(e){var t=i(e.components);return n.createElement(u.Provider,{value:t},e.children)},d="mdxType",E={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=i(a),c=r,m=d["".concat(u,".").concat(c)]||d[c]||E[c]||l;return a?n.createElement(m,s(s({ref:t},p),{},{components:a})):n.createElement(m,s({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,s=new Array(l);s[0]=c;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[d]="string"==typeof e?e:r,s[1]=o;for(var i=2;i<l;i++)s[i]=a[i];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},4941:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>E,frontMatter:()=>l,metadata:()=>o,toc:()=>i});var n=a(7462),r=(a(7294),a(3905));const l={sidebar_label:"SQL",sidebar_position:1},s="SQL",o={unversionedId:"databases/sql",id:"databases/sql",title:"SQL",description:"Create Database",source:"@site/docs/databases/sql.md",sourceDirName:"databases",slug:"/databases/sql",permalink:"/databases/sql",draft:!1,editUrl:"https://github.com/vdwstoffel/code_docs/blob/main/docs/databases/sql.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"SQL",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Databases",permalink:"/databases/"},next:{title:"MongoDB",permalink:"/databases/mongodb"}},u={},i=[{value:"Create Database",id:"create-database",level:2},{value:"Create Table",id:"create-table",level:2},{value:"Create Table with Foreign Key",id:"create-table-with-foreign-key",level:3},{value:"Drop Table",id:"drop-table",level:2},{value:"Alter Table",id:"alter-table",level:2},{value:"SELECT",id:"select",level:2},{value:"INSERT INTO",id:"insert-into",level:2},{value:"UPDATE",id:"update",level:2},{value:"DELETE",id:"delete",level:2},{value:"COUNT",id:"count",level:2},{value:"LIMIT",id:"limit",level:2},{value:"JOIN",id:"join",level:2},{value:"GROUP BY",id:"group-by",level:2},{value:"DISTINCT",id:"distinct",level:2},{value:"IN",id:"in",level:2},{value:"LIKE",id:"like",level:2},{value:"Aggregate",id:"aggregate",level:2}],p={toc:i},d="wrapper";function E(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"sql"},"SQL"),(0,r.kt)("h2",{id:"create-database"},"Create Database"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE DATABASE code_snippets;\n")),(0,r.kt)("h2",{id:"create-table"},"Create Table"),(0,r.kt)("p",null,"To auto increase the primary key"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"MySQL: ",(0,r.kt)("inlineCode",{parentName:"li"},"AUTO_INCREMENT")),(0,r.kt)("li",{parentName:"ol"},"PostgreSQL: ",(0,r.kt)("inlineCode",{parentName:"li"},"SERIAL")),(0,r.kt)("li",{parentName:"ol"},"SQLite3: ",(0,r.kt)("inlineCode",{parentName:"li"},"AUTOINCREMENT"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE users (\n    user_id SERIAL PRIMARY KEY,\n    username VARCHAR(250) UNIQUE,\n    age INT\n);\n")),(0,r.kt)("h3",{id:"create-table-with-foreign-key"},"Create Table with Foreign Key"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE platform (\n    platform_id SERIAL PRIMARY KEY,\n    platform_name VARCHAR(250),\n    user_id INTEGER REFERENCES users(user_id)\n);\n")),(0,r.kt)("h2",{id:"drop-table"},"Drop Table"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"DROP TABLE users;\n")),(0,r.kt)("h2",{id:"alter-table"},"Alter Table"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"-- Rename Table\nALTER TABLE users\nRENAME TO new_users;\n\n-- Rename COLUMN\nALTER TABLE new_users\nRENAME COLUMN username TO new_username;\n\n-- Drop COLUMN\nALTER TABLE new_users\nDROP COLUMN IF EXISTS age;\n")),(0,r.kt)("h2",{id:"select"},"SELECT"),(0,r.kt)("p",null,"The SELECT statement is used to select data from a database."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM users;\n\nSELECT * FROM users\nWHERE username = 'Stoffel';\n\nSELECT username AS us\nFROM users;\n\nSELECT * FROM users\nORDER BY username ASC/DESC;\n")),(0,r.kt)("h2",{id:"insert-into"},"INSERT INTO"),(0,r.kt)("p",null,"The INSERT INTO statement is used to insert new records in a table."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO users (username, age)\nVALUES ('Stoffel', 30);\n")),(0,r.kt)("h2",{id:"update"},"UPDATE"),(0,r.kt)("p",null,"The UPDATE statement is used to modify existing records in a table."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"UPDATE users\nSET username = 'stoffel_updated'\nWHERE username = 'Stoffel'\nRETURNING *; -- See output\n")),(0,r.kt)("h2",{id:"delete"},"DELETE"),(0,r.kt)("p",null,"The DELETE statement is used to delete existing records from a table."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"-- Delete all\nDELETE FROM users;\n\n-- Delete on condition\nDELETE FROM users\nWHERE username = 'Christoff'\n")),(0,r.kt)("h2",{id:"count"},"COUNT"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT COUNT(*) FROM users;\n")),(0,r.kt)("h2",{id:"limit"},"LIMIT"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM users\nLIMIT 5;\n")),(0,r.kt)("h2",{id:"join"},"JOIN"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM users\nINNER JOIN platform\nON users.user_id = platform.user_id;\n")),(0,r.kt)("h2",{id:"group-by"},"GROUP BY"),(0,r.kt)("p",null,"The GROUP BY statement is used to group rows that have the same values into summary rows."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT age, COUNT(*) FROM users\nGROUP BY age;\n\n-- The HAVING clause is used to filter records that are returned by GROUP BY\nSELECT age, COUNT (*) FROM users\nGROUP BY age\nHAVING age < 30;\n")),(0,r.kt)("h2",{id:"distinct"},"DISTINCT"),(0,r.kt)("p",null,"The DISTINCT keyword is used to return only distinct (unique) values."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT DISTINCT age FROM users;\n")),(0,r.kt)("h2",{id:"in"},"IN"),(0,r.kt)("p",null,"The IN operator allows you to specify multiple values in a WHERE clause."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM users\nWHERE username\nIN ('Stoffel', 'Mavis');\n")),(0,r.kt)("h2",{id:"like"},"LIKE"),(0,r.kt)("p",null,"The LIKE operator is used in a WHERE clause to search for a specified pattern in a column."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"-- Exact Pattern Match\nSELECT * FROM users\nWHERE username LIKE 'Stof';\n\n-- Use % for more than one pattern match\nSELECT * FROM users\nWHERE username LIKE '%Stof%';\n\n-- Use _ for more than one pattern match\nSELECT * FROM users\nWHERE username LIKE 'Stof_';\n\n-- Case Insensitive\nSELECT * FROM users\nWHERE username ILIKE '%stof%';\n")),(0,r.kt)("h2",{id:"aggregate"},"Aggregate"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT MIN(age) FROM users;\n\nSELECT MAX(age) FROM users;\n\nSELECT SUM(age) FROM users;\n\nSELECT AVG(age) FROM users;\n\nSELECT ROUND(AVG(age)) FROM users;\n")))}E.isMDXComponent=!0}}]);